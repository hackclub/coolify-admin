<div class="page-header">
  <h1>Coolify Admin - Resource Monitor</h1>
  <div class="header-actions">
    <%= link_to "Add New Team", new_coolify_team_path, class: "btn btn-primary" %>
    <button id="sync-btn" class="btn btn-secondary">üîÑ Sync Coolify Data</button>
    <button id="collect-btn" class="btn btn-secondary">üìä Collect Metrics Now</button>
  </div>
</div>

<div id="sync-status" class="sync-status" style="display: none;"></div>

<!-- View Controls -->
<div class="view-controls">
  <div class="view-switcher">
    <%= link_to "üå≥ Tree View", root_path(view: 'tree', server_id: @server_id), 
        class: "view-btn #{@view == 'tree' ? 'active' : ''}" %>
    <%= link_to "üíæ Storage View", root_path(view: 'storage', server_id: @server_id), 
        class: "view-btn #{@view == 'storage' ? 'active' : ''}" %>
    <%= link_to "‚ö° CPU View", root_path(view: 'cpu', server_id: @server_id), 
        class: "view-btn #{@view == 'cpu' ? 'active' : ''}" %>
    <%= link_to "üß† RAM View", root_path(view: 'ram', server_id: @server_id), 
        class: "view-btn #{@view == 'ram' ? 'active' : ''}" %>
  </div>
  
  <div class="filter-controls">
    <%= form_with url: root_path, method: :get, class: "server-filter-form" do |f| %>
      <%= f.hidden_field :view, value: @view %>
      <%= f.select :server_id, 
          options_for_select([['All Servers', '']] + @servers.map { |s| [s.name, s.id] }, @server_id),
          {},
          class: "server-filter-select",
          onchange: "this.form.submit()" %>
    <% end %>
  </div>
</div>

<% if @coolify_teams.empty? %>
  <div class="empty-state">
    <p>No teams configured yet.</p>
    <p><%= link_to "Add your first team", new_coolify_team_path %> to get started.</p>
  </div>
<% else %>
  <!-- Summary Stats -->
  <div class="stats-summary">
    <div class="stat-card">
      <div class="stat-value"><%= @stats[:servers] %></div>
      <div class="stat-label">Servers</div>
    </div>
    <div class="stat-card">
      <div class="stat-value"><%= @stats[:projects] %></div>
      <div class="stat-label">Projects</div>
    </div>
    <div class="stat-card">
      <div class="stat-value"><%= @stats[:environments] %></div>
      <div class="stat-label">Environments</div>
    </div>
    <div class="stat-card">
      <div class="stat-value"><%= @stats[:applications] %></div>
      <div class="stat-label">Applications</div>
    </div>
    <div class="stat-card">
      <div class="stat-value"><%= @stats[:services] %></div>
      <div class="stat-label">Services</div>
    </div>
    <div class="stat-card">
      <div class="stat-value"><%= @stats[:databases] %></div>
      <div class="stat-label">Databases</div>
    </div>
  </div>

  <% if @view == 'tree' %>
    <!-- Tree View: Teams List -->
    <div class="teams-list">
    <% @coolify_teams.each do |coolify_team| %>
      <div class="team-card">
        <div class="team-header">
          <div class="team-header-left">
            <h2><%= coolify_team.name %></h2>
            <div class="team-meta">
              <span class="team-url"><%= coolify_team.base_url %></span>
              <span class="team-token">Token: <%= coolify_team.masked_token %></span>
            </div>
          </div>
          <div class="team-actions">
            <%= button_to "Delete", coolify_team_path(coolify_team), 
                method: :delete, 
                class: "btn btn-danger",
                form: { data: { turbo_confirm: "Are you sure you want to delete '#{coolify_team.name}'? This cannot be undone." } } %>
          </div>
        </div>

        <div class="tree-section">
          <!-- Servers Section -->
          <h3>Servers (<%= coolify_team.servers.count %>)</h3>
          <% if coolify_team.servers.empty? %>
            <p class="no-data">No servers synced yet. Click "Sync Coolify Data" above.</p>
          <% else %>
            <ul class="tree-list server-list">
              <% coolify_team.servers.each do |server| %>
                <li class="tree-item server-item">
                  <div class="item-name server-name">
                    <%= server.name %>
                    <% if server.is_reachable %>
                      <span class="badge badge-success">up</span>
                    <% else %>
                      <span class="badge badge-error">down</span>
                    <% end %>
                    <% if server.private_key&.private_key.present? %>
                      <button class="btn btn-small" data-action="collect-server-stats" data-server-id="<%= server.id %>" data-server-name="<%= server.name %>">üìä Collect Stats</button>
                    <% end %>
                  </div>
                  <div class="server-url"><%= server.ip %>:<%= server.port %> (<%= server.user %>) ‚Ä¢ <%= server.proxy_type || 'no-proxy' %> ‚Ä¢ <%= server.resources.count %> resources
                    <% unless server.private_key&.private_key.present? %>
                      <span class="badge badge-warning">SSH key required</span>
                      <button class="btn btn-small" data-action="add-key" data-server-id="<%= server.id %>">Add SSH Key</button>
                    <% end %>
                  </div>
                  <% if (stat = @latest_server_stats[server.id]) %>
                    <div class="server-stats">
                      CPU: <%= stat.cpu_pct&.round(1) %>% ‚Ä¢ MEM: <%= format_memory_stat(stat) %> ‚Ä¢ LOAD: <%= format_load_stat(stat, server) %>
                    </div>
                    <% local_fs = local_filesystems(stat) %>
                    <% if local_fs.any? %>
                      <div class="filesystem-breakdown">
                        DISK: <%= local_fs.map { |fs| format_filesystem(fs) }.join(' ‚Ä¢ ') %>
                      </div>
                    <% end %>
                  <% end %>
                </li>
              <% end %>
            </ul>
          <% end %>

          <!-- Projects Section -->
          <h3>Projects (<%= coolify_team.projects.count %>)</h3>
          <% if coolify_team.projects.empty? %>
            <p class="no-data">No projects synced yet.</p>
          <% else %>
            <ul class="tree-list project-list">
              <% coolify_team.projects.each do |project| %>
                <li class="tree-item project-item">
                  <div class="item-name project-name"><%= project.name %></div>
                  
                  <!-- Environments for this project -->
                  <% if project.environments.any? %>
                    <ul class="tree-list environment-list">
                      <% project.environments.each do |environment| %>
                        <li class="tree-item environment-item">
                          <div class="item-name environment-name">
                            <%= environment.name %> <span class="count">(<%= environment.resources.count %>)</span>
                          </div>
                          
                          <!-- Resources for this environment -->
                          <% if environment.resources.any? %>
                            <ul class="tree-list resource-list">
                              <% environment.resources.each do |resource| %>
                                <li class="tree-item resource-item">
                                  <div class="resource-type-label"><%= resource.type.sub('Coolify', '').downcase %></div>
                                  <div class="item-name resource-name">
                                    <%= link_to resource.name, resource_path(resource), class: "resource-detail-link" %>
                                    <% if resource.status %>
                                      <span class="status <%= resource.status.include?('running') ? 'ok' : 'err' %>">
                                        <%= resource.status %>
                                      </span>
                                    <% end %>
                                    <% if resource.fqdn.present? %>
                                      ‚Ä¢ <%= resource.fqdn %>
                                    <% end %>
                                  </div>
                                  <div class="resource-server">
                                    üìç <%= resource.server.name %>
                                  </div>
                                  <% if (rstat = @latest_resource_stats[resource.id]) %>
                                    <div class="resource-stats">
                                      CPU: <%= rstat.cpu_pct&.round(1) %>% ‚Ä¢ MEM: <%= format_memory_stat(rstat) %> ‚Ä¢ DISK: <%= format_bytes([rstat.disk_persistent_bytes, rstat.disk_runtime_bytes].compact.sum) %>
                                    </div>
                                  <% end %>
                                </li>
                              <% end %>
                            </ul>
                          <% end %>
                        </li>
                      <% end %>
                    </ul>
                  <% end %>
                </li>
              <% end %>
            </ul>
          <% end %>
        </div>
      </div>
    <% end %>
  </div>
  
  <% elsif @view == 'storage' %>
    <!-- Storage View: Resources sorted by disk usage -->
    <div class="storage-view">
      <div class="storage-header">
        <h2>Resources by Storage Usage</h2>
        <% if @server_id.present? && (filtered_server = @servers.find { |s| s.id.to_s == @server_id.to_s }) %>
          <span class="filter-badge">Filtered: <%= filtered_server.name %></span>
        <% end %>
      </div>
      
      <div class="storage-list">
        <% if @resources_by_storage.any? %>
          <table class="storage-table">
            <thead>
              <tr>
                <th>Resource</th>
                <th>Type</th>
                <th>Server</th>
                <th>Project / Environment</th>
                <th>Status</th>
                <th>Disk Usage</th>
                <th>Memory</th>
                <th>CPU</th>
              </tr>
            </thead>
            <tbody>
              <% @resources_by_storage.each do |resource| %>
                <% rstat = @latest_resource_stats[resource.id] %>
                <% total_disk = rstat ? (rstat.disk_runtime_bytes.to_i + rstat.disk_persistent_bytes.to_i) : 0 %>
                <tr class="storage-row">
                  <td class="resource-name">
                    <div class="resource-name-row">
                      <strong><%= link_to resource.name, resource_path(resource), class: "resource-detail-link" %></strong>
                      <% if resource.coolify_url %>
                        <a href="<%= resource.coolify_url %>" target="_blank" rel="noopener" class="coolify-chevron" title="Open in Coolify">
                          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round"><path d="M7 17l9.2-9.2M17 17V7H7"></path></svg>
                        </a>
                      <% end %>
                    </div>
                    <% if resource.metadata.dig('raw', 'fqdn').present? %>
                      <div class="resource-url">
                        <a href="<%= resource.metadata.dig('raw', 'fqdn').split(',').first %>" target="_blank" rel="noopener">
                          <%= resource.metadata.dig('raw', 'fqdn').split(',').first %>
                        </a>
                      </div>
                    <% end %>
                  </td>
                  <td>
                    <span class="resource-type-badge <%= resource.type.downcase %>">
                      <%= resource.type.sub('Coolify', '').downcase %>
                    </span>
                  </td>
                  <td class="server-name"><%= resource.server.name %></td>
                  <td class="project-env">
                    <%= resource.environment.project.name %>
                    <span class="env-name">/ <%= resource.environment.name %></span>
                  </td>
                  <td>
                    <% if resource.status.present? %>
                      <% status_class = resource.status.start_with?('running') ? 'ok' : 'err' %>
                      <span class="status <%= status_class %>"><%= resource.status %></span>
                    <% end %>
                  </td>
                  <td class="disk-usage">
                    <% if total_disk > 0 %>
                      <strong><%= format_bytes(total_disk) %></strong>
                      <div class="disk-breakdown">
                        <span class="disk-part">RW: <%= format_bytes(rstat.disk_runtime_bytes || 0) %></span>
                        <span class="disk-part">Vol: <%= format_bytes(rstat.disk_persistent_bytes || 0) %></span>
                      </div>
                    <% else %>
                      <span class="no-data">No data</span>
                    <% end %>
                  </td>
                  <td class="memory-stat">
                    <% if rstat %>
                      <%= format_memory_stat(rstat) %>
                    <% else %>
                      <span class="no-data">-</span>
                    <% end %>
                  </td>
                  <td class="cpu-stat">
                    <% if rstat&.cpu_pct %>
                      <%= rstat.cpu_pct.round(1) %>%
                    <% else %>
                      <span class="no-data">-</span>
                    <% end %>
                  </td>
                </tr>
              <% end %>
            </tbody>
          </table>
        <% else %>
          <div class="empty-state">
            <p>No resources found.</p>
            <% if @server_id.present? %>
              <p><%= link_to "Clear filter", root_path(view: 'storage') %> to see all resources.</p>
            <% end %>
          </div>
        <% end %>
      </div>
    </div>
  
  <% elsif @view == 'cpu' %>
    <!-- CPU View: Resources sorted by CPU usage -->
    <div class="cpu-view">
      <div class="cpu-header">
        <h2>Resources by CPU Usage (24h Average)</h2>
        <% if @server_id.present? && (filtered_server = @servers.find { |s| s.id.to_s == @server_id.to_s }) %>
          <span class="filter-badge">Filtered: <%= filtered_server.name %></span>
        <% end %>
      </div>
      
      <div class="cpu-list">
        <% if @resources_by_cpu.any? %>
          <table class="cpu-table">
            <thead>
              <tr>
                <th>Resource</th>
                <th>Type</th>
                <th>Server</th>
                <th>Project / Environment</th>
                <th>Status</th>
                <th>24h Avg CPU</th>
                <th>Current CPU</th>
                <th>Memory</th>
                <th>Disk</th>
              </tr>
            </thead>
            <tbody>
              <% @resources_by_cpu.each do |resource| %>
                <% rstat = @latest_resource_stats[resource.id] %>
                <tr class="cpu-row">
                  <td class="resource-name">
                    <div class="resource-name-row">
                      <strong><%= link_to resource.name, resource_path(resource), class: "resource-detail-link" %></strong>
                      <% if resource.coolify_url %>
                        <a href="<%= resource.coolify_url %>" target="_blank" rel="noopener" class="coolify-chevron" title="Open in Coolify">
                          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round"><path d="M7 17l9.2-9.2M17 17V7H7"></path></svg>
                        </a>
                      <% end %>
                    </div>
                    <% if resource.metadata.dig('raw', 'fqdn').present? %>
                      <div class="resource-url">
                        <a href="<%= resource.metadata.dig('raw', 'fqdn').split(',').first %>" target="_blank" rel="noopener">
                          <%= resource.metadata.dig('raw', 'fqdn').split(',').first %>
                        </a>
                      </div>
                    <% end %>
                  </td>
                  <td>
                    <span class="resource-type-badge <%= resource.type.downcase %>">
                      <%= resource.type.sub('Coolify', '').downcase %>
                    </span>
                  </td>
                  <td class="server-name"><%= resource.server.name %></td>
                  <td class="project-env">
                    <%= resource.environment.project.name %>
                    <span class="env-name">/ <%= resource.environment.name %></span>
                  </td>
                  <td>
                    <% if resource.status.present? %>
                      <% status_class = resource.status.start_with?('running') ? 'ok' : 'err' %>
                      <span class="status <%= status_class %>"><%= resource.status %></span>
                    <% end %>
                  </td>
                  <td class="cpu-usage-highlight">
                    <% if resource.avg_cpu_24h %>
                      <strong><%= resource.avg_cpu_24h.round(1) %>%</strong>
                    <% else %>
                      <span class="no-data">No data</span>
                    <% end %>
                  </td>
                  <td class="cpu-stat">
                    <% if rstat&.cpu_pct %>
                      <%= rstat.cpu_pct.round(1) %>%
                    <% else %>
                      <span class="no-data">-</span>
                    <% end %>
                  </td>
                  <td class="memory-stat">
                    <% if rstat %>
                      <%= format_memory_stat(rstat) %>
                    <% else %>
                      <span class="no-data">-</span>
                    <% end %>
                  </td>
                  <td class="disk-stat">
                    <% if rstat %>
                      <%= format_bytes((rstat.disk_runtime_bytes || 0) + (rstat.disk_persistent_bytes || 0)) %>
                    <% else %>
                      <span class="no-data">-</span>
                    <% end %>
                  </td>
                </tr>
              <% end %>
            </tbody>
          </table>
        <% else %>
          <div class="empty-state">
            <p>No resources found.</p>
            <% if @server_id.present? %>
              <p><%= link_to "Clear filter", root_path(view: 'cpu') %> to see all resources.</p>
            <% end %>
          </div>
        <% end %>
      </div>
    </div>
  
  <% elsif @view == 'ram' %>
    <!-- RAM View: Resources sorted by memory usage -->
    <div class="ram-view">
      <div class="ram-header">
        <h2>Resources by RAM Usage (24h Average)</h2>
        <% if @server_id.present? && (filtered_server = @servers.find { |s| s.id.to_s == @server_id.to_s }) %>
          <span class="filter-badge">Filtered: <%= filtered_server.name %></span>
        <% end %>
      </div>
      
      <div class="ram-list">
        <% if @resources_by_ram.any? %>
          <table class="ram-table">
            <thead>
              <tr>
                <th>Resource</th>
                <th>Type</th>
                <th>Server</th>
                <th>Project / Environment</th>
                <th>Status</th>
                <th>24h Avg RAM</th>
                <th>Current RAM</th>
                <th>Memory %</th>
                <th>CPU</th>
                <th>Disk</th>
              </tr>
            </thead>
            <tbody>
              <% @resources_by_ram.each do |resource| %>
                <% rstat = @latest_resource_stats[resource.id] %>
                <tr class="ram-row">
                  <td class="resource-name">
                    <div class="resource-name-row">
                      <strong><%= link_to resource.name, resource_path(resource), class: "resource-detail-link" %></strong>
                      <% if resource.coolify_url %>
                        <a href="<%= resource.coolify_url %>" target="_blank" rel="noopener" class="coolify-chevron" title="Open in Coolify">
                          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round"><path d="M7 17l9.2-9.2M17 17V7H7"></path></svg>
                        </a>
                      <% end %>
                    </div>
                    <% if resource.metadata.dig('raw', 'fqdn').present? %>
                      <div class="resource-url">
                        <a href="<%= resource.metadata.dig('raw', 'fqdn').split(',').first %>" target="_blank" rel="noopener">
                          <%= resource.metadata.dig('raw', 'fqdn').split(',').first %>
                        </a>
                      </div>
                    <% end %>
                  </td>
                  <td>
                    <span class="resource-type-badge <%= resource.type.downcase %>">
                      <%= resource.type.sub('Coolify', '').downcase %>
                    </span>
                  </td>
                  <td class="server-name"><%= resource.server.name %></td>
                  <td class="project-env">
                    <%= resource.environment.project.name %>
                    <span class="env-name">/ <%= resource.environment.name %></span>
                  </td>
                  <td>
                    <% if resource.status.present? %>
                      <% status_class = resource.status.start_with?('running') ? 'ok' : 'err' %>
                      <span class="status <%= status_class %>"><%= resource.status %></span>
                    <% end %>
                  </td>
                  <td class="memory-usage-highlight">
                    <% if resource.avg_mem_24h %>
                      <strong><%= format_bytes(resource.avg_mem_24h) %></strong>
                    <% else %>
                      <span class="no-data">No data</span>
                    <% end %>
                  </td>
                  <td class="memory-stat">
                    <% if rstat&.mem_used_bytes %>
                      <%= format_bytes(rstat.mem_used_bytes) %>
                    <% else %>
                      <span class="no-data">-</span>
                    <% end %>
                  </td>
                  <td class="memory-pct">
                    <% if rstat %>
                      <%= format_memory_stat(rstat) %>
                    <% else %>
                      <span class="no-data">-</span>
                    <% end %>
                  </td>
                  <td class="cpu-stat">
                    <% if rstat&.cpu_pct %>
                      <%= rstat.cpu_pct.round(1) %>%
                    <% else %>
                      <span class="no-data">-</span>
                    <% end %>
                  </td>
                  <td class="disk-stat">
                    <% if rstat %>
                      <%= format_bytes((rstat.disk_runtime_bytes || 0) + (rstat.disk_persistent_bytes || 0)) %>
                    <% else %>
                      <span class="no-data">-</span>
                    <% end %>
                  </td>
                </tr>
              <% end %>
            </tbody>
          </table>
        <% else %>
          <div class="empty-state">
            <p>No resources found.</p>
            <% if @server_id.present? %>
              <p><%= link_to "Clear filter", root_path(view: 'ram') %> to see all resources.</p>
            <% end %>
          </div>
        <% end %>
      </div>
    </div>
  <% end %>
<% end %>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const syncBtn = document.getElementById('sync-btn');
  const syncStatus = document.getElementById('sync-status');

  if (syncBtn) {
    syncBtn.addEventListener('click', async function() {
      // Disable button and show loading state
      syncBtn.disabled = true;
      syncBtn.textContent = '‚è≥ Queuing...';
      
      // Show status div
      syncStatus.style.display = 'block';
      syncStatus.className = 'sync-status syncing';
      syncStatus.textContent = 'Queueing sync job...';

      try {
        const response = await fetch('/sync', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
          }
        });

        const result = await response.json();

        if (result.success) {
          syncStatus.className = 'sync-status success';
          syncStatus.innerHTML = `
            <div class="sync-success">‚úÖ Sync job queued successfully!</div>
            <div class="sync-details">
              <p>${result.message}</p>
              <p>The sync is running in the background. View progress in the <a href="/jobs" target="_blank">Job Dashboard</a>.</p>
              <p class="reload-notice">Refreshing page in 3 seconds...</p>
            </div>
          `;
          
          // Reload page after 3 seconds to show updated data (if job completes quickly)
          setTimeout(() => {
            window.location.reload();
          }, 3000);
        } else {
          syncStatus.className = 'sync-status error';
          syncStatus.innerHTML = `<div class="sync-error">‚ùå Failed to queue sync job: ${result.error || 'Unknown error'}</div>`;
          
          // Re-enable button on error
          syncBtn.disabled = false;
          syncBtn.textContent = 'üîÑ Sync Coolify Data';
        }
      } catch (error) {
        syncStatus.className = 'sync-status error';
        syncStatus.textContent = `‚ùå Network error: ${error.message}`;
        
        // Re-enable button on error
        syncBtn.disabled = false;
        syncBtn.textContent = 'üîÑ Sync Coolify Data';
      }
    });
  }

  const collectBtn = document.getElementById('collect-btn');
  if (collectBtn) {
    collectBtn.addEventListener('click', async function() {
      collectBtn.disabled = true;
      const prev = collectBtn.textContent;
      collectBtn.textContent = '‚è≥ Collecting...';

      try {
        const response = await fetch('/metrics/collect_now', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
          }
        });
        const result = await response.json();
        if (result.success) {
          alert(`Triggered ${result.triggered} servers. Skipped: ${result.skipped.join(', ')}`);
        } else {
          alert(`Collect failed: ${result.error}`);
        }
      } catch (e) {
        alert(`Network error: ${e.message}`);
      } finally {
        collectBtn.disabled = false;
        collectBtn.textContent = prev;
      }
    });
  }

  function buildSuccessMessage(result) {
    let html = '<div class="sync-success">‚úÖ Sync completed successfully!</div>';
    html += '<div class="sync-details">';
    
    for (const [teamName, teamResult] of Object.entries(result.teams || {})) {
      if (teamResult.success) {
        const counts = teamResult.synced;
        html += `<div class="team-sync-result">
          <strong>${teamName}:</strong> 
          ${counts.servers} servers, 
          ${counts.projects} projects, 
          ${counts.environments} environments, 
          ${counts.applications} applications, 
          ${counts.services} services, 
          ${counts.databases} databases
        </div>`;
      } else {
        html += `<div class="team-sync-error"><strong>${teamName}:</strong> ${teamResult.error}</div>`;
      }
    }
    
    html += '</div>';
    html += '<p class="reload-notice">Reloading page...</p>';
    return html;
  }

  function buildErrorMessage(result) {
    let html = '<div class="sync-error">‚ùå Sync failed</div>';
    
    for (const [teamName, teamResult] of Object.entries(result.teams || {})) {
      if (!teamResult.success) {
        html += `<div class="team-sync-error"><strong>${teamName}:</strong> ${teamResult.error}</div>`;
      }
    }
    
    return html;
  }

  // Inline Add SSH Key flow
  document.querySelectorAll('button[data-action="add-key"]').forEach((btn) => {
    btn.addEventListener('click', async function() {
      const serverId = this.getAttribute('data-server-id');
      try {
        const resp = await fetch(`/servers/${serverId}/private_key`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
          }
        });
        const result = await resp.json();
        if (result.success && result.redirect_to) {
          window.location.href = result.redirect_to;
        } else {
          alert(`Failed to prepare key: ${result.error || 'Unknown error'}`);
        }
      } catch (e) {
        alert(`Network error: ${e.message}`);
      }
    });
  });

  // Collect stats for individual server
  document.querySelectorAll('button[data-action="collect-server-stats"]').forEach((btn) => {
    btn.addEventListener('click', async function() {
      const serverId = this.getAttribute('data-server-id');
      const serverName = this.getAttribute('data-server-name');
      const button = this;
      
      button.disabled = true;
      const prevText = button.textContent;
      button.textContent = '‚è≥ Collecting...';
      
      try {
        const resp = await fetch(`/servers/${serverId}/collect_stats`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
          }
        });
        const result = await resp.json();
        
        if (result.success) {
          alert(`‚úÖ Stats collection started for ${serverName}\n\nServer stats: triggered\nResource stats: ${result.resources_triggered} containers\n\nThe page will refresh in a few seconds.`);
          
          // Refresh page after a delay to show updated stats
          setTimeout(() => {
            window.location.reload();
          }, 3000);
        } else {
          alert(`‚ùå Failed: ${result.error}`);
          button.disabled = false;
          button.textContent = prevText;
        }
      } catch (e) {
        alert(`Network error: ${e.message}`);
        button.disabled = false;
        button.textContent = prevText;
      }
    });
  });
});
</script>

